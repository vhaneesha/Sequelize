var express = require('express');
var router = express.Router();

const { sequelize, User, Event, Tag } = require('../sequelize')

// create a user
router.post('/', (req, res, next) => {
    User.create(req.body)
        .then(user => res.json(user))
        .catch(err => {return next(err)})
});

// get all users
router.get('/', (req, res, next) => {
    User.findAll().then(users => res.json(users))
        .catch(err => {return next(err)})
});

// get all soft deleted users using scope
router.get('/deleted', (req, res, next) => {
    User.scope('deleted').findAll().then(users => res.json(users))
        .catch(err => {return next(err)})
});

// get a user by id
router.get('/find/:id', (req, res, next) => {
    User.findById(req.params.id).then(user => res.json(user))
        .catch(err => {return next(err)})
});

//update a user
router.put('/update/:id', (req, res, next) => {
    User.findById(req.params.id)
        .then(user => user.update(req.body))
        .then(user => res.json(user))
        .catch(err => {return next(err)})
});

// soft delete a user
router.delete('/delete/:id', (req, res, next) => {
    User.findById(req.params.id)
        .then(user => user.destroy())
        .then(user => res.json(user))
        .catch(err => {return next(err)})
});

// get events hosted by a user using method generated by hasMany with Event
router.get('/hostedBy/:id', (req, res, next) => {
    User.findById(req.params.id)
        .then(user => user.getHosted())
        .then(events => res.json(events))
        .catch(err => {return next(err)})
});

// get events attended by a user using method generated by belongsToMany
router.get('/attendedBy/:id', (req, res, next) => {
    User.findById(req.params.id)
        .then(user => user.getAttended())
        .then(events => res.json(events))
        .catch(err => {return next(err)})
});



module.exports = router;
